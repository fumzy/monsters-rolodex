{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBACAC,IAAI,UACJC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNLC,EAAW,SAAAR,GAEhB,OAAO,sBAAKC,UAAU,YAAf,UACHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAFlB,QCHFM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAcA,EAAaG,SAAUF,MC8ClEG,E,kDA5Cb,aAAc,IAAD,8BACX,gBAiBJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhBnC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDAWb,WACG,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAAUkB,S,oBAM3C,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGhD,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACD,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAgBe,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAnCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d62d5cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) =>(\r\n<div className='card-container'>\r\n<img\r\nalt='monster'\r\nsrc= {`https://robohash.org/${props.monster.id}?set=set2&sixe=180x180`}\r\n/>\r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n</div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props =>\r\n{\r\n        return <div className='card-list'>{         \r\n            props.monsters.map(monster =>(\r\n              <Card key={monster.id} monster={monster}/>))} </div>;\r\n}\r\n   ","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n\r\n    <input className='search' type='search' placeholder= {placeholder} onChange={handleChange}\r\n      />\r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    \n  }\n\n  componentDidMount()\n    {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users=> this.setState({monsters: users}));\n    }\n  \nhandleChange = (e) => {\n  this.setState({searchField: e.target.value})\n}\n  render(){\n    const {monsters, searchField} = this.state;\n   const filteredMonsters = monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n  \n    return ( \n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n     <SearchBox\n     placeholder='Search Monster'\n     handleChange = {this.handleChange }\n     />\n      <CardList monsters={filteredMonsters}>     \n      </CardList>\n\n      </div>\n   \n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}